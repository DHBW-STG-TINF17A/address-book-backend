---
swagger: "2.0"
info:
  description: "Address Book Back End Web Service for the Web Engineering II Exam\
    \ Project at DHBW Stuttgart, Winter Term 2018/19. Back End by Oliver Rudzinski."
  version: "1.0.0"
  title: "Address Book"
  contact:
    name: "Oliver Rudzinski (5481330)"
    email: "inf17068@lehre.dhbw-stuttgart.de"
host: "localhost:10010"
tags:
- name: "books"
  description: "Entire Address Books"
- name: "contact"
  description: "Address Book Entries"
- name: "groups"
  description: "Groups"
schemes:
- "http"
- "https"
paths:
  /books:
    get:
      tags:
      - "books"
      summary: "Retrieve all contact books"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Contact books have been fetched successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
    post:
      tags:
      - "books"
      summary: "Create a new contact book"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book to be created"
        required: true
        schema:
          $ref: "#/definitions/BookCreate"
      responses:
        201:
          description: "Contact book has been created successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
  /books/{bookId}:
    get:
      tags:
      - "books"
      summary: "Retrieve a specific contact book"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Contact book has been fetched successfully."
          schema:
            $ref: "#/definitions/Book"
    put:
      tags:
      - "books"
      summary: "Update an existing contact book"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to update"
        required: true
        type: "string"
      responses:
        201:
          description: "Contact book has been updated successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
    delete:
      tags:
      - "books"
      summary: "Delete a specific contact book"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "Contact book has been deleted successfully."
  /{bookId}/contacts:
    get:
      tags:
      - "contact"
      summary: "Retrieve all available contact entries"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to retrieve contacts from"
        required: true
        type: "string"
      responses:
        200:
          description: "Contacts have been fetched successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
    post:
      tags:
      - "contact"
      summary: "Create a new contact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to be added a contact to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Contact to be created"
        required: true
        schema:
          $ref: "#/definitions/ContactCreate"
      responses:
        201:
          description: "Contact has been created successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
  /{bookId}/contacts/{contactId}:
    get:
      tags:
      - "contact"
      summary: "Retrieve a specific contact"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to retrieve the specific contact from"
        required: true
        type: "string"
      - name: "contactId"
        in: "path"
        description: "ID of contact to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Contact has been fetched successfully."
          schema:
            $ref: "#/definitions/Contact"
    put:
      tags:
      - "contact"
      summary: "Update an existing contact"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book which gets a specific contact updated"
        required: true
        type: "string"
      - name: "contactId"
        in: "path"
        description: "ID of contact to update"
        required: true
        type: "string"
      responses:
        201:
          description: "Contact has been updated successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
    delete:
      tags:
      - "contact"
      summary: "Delete an existing contact"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to be deleted a specific contact from"
        required: true
        type: "string"
      - name: "contactId"
        in: "path"
        description: "ID of contact to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "Contact has been deleted successfully."
  /{bookId}/groups:
    get:
      tags:
      - "groups"
      summary: "Retrieve all available categories"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to retrieve groups from"
        required: true
        type: "string"
      responses:
        201:
          description: "Groups have been fetched successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Group"
    post:
      tags:
      - "groups"
      summary: "Create a new group"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to add a group to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Group to be created"
        required: true
        schema:
          $ref: "#/definitions/GroupCreate"
      responses:
        201:
          description: "Group has been created successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Group"
  /{bookId}/groups/{groupId}:
    get:
      tags:
      - "groups"
      summary: "Retrieve a specific group"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to retrieve a specific group from"
        required: true
        type: "string"
      - name: "groupId"
        in: "path"
        description: "ID of group to retrieve"
        required: true
        type: "string"
      responses:
        200:
          description: "Group has been fetched successfully."
          schema:
            $ref: "#/definitions/Group"
    put:
      tags:
      - "groups"
      summary: "Edit a specific group"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to get a specific group updated"
        required: true
        type: "string"
      - name: "groupId"
        in: "path"
        description: "ID of group to update"
        required: true
        type: "integer"
      - in: "body"
        name: "body"
        description: "Group to be updated"
        required: true
        schema:
          $ref: "#/definitions/Group"
      responses:
        201:
          description: "Group has been updated successfully."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Group"
    delete:
      tags:
      - "groups"
      summary: "Delete a specific group"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "path"
        description: "ID of book to delete a specific group from"
        required: true
        type: "string"
      - name: "groupId"
        in: "path"
        description: "ID of group to delete"
        required: true
        type: "string"
      responses:
        204:
          description: "Group has been deleted successfully."
definitions:
  Book:
    type: "object"
    required:
    - "color"
    - "_id"
    - "contacts"
    - "groups"
    - "name"
    properties:
      _id:
        type: "string"
      contacts:
        type: "array"
        items:
          type: "string"
      groups:
        type: "array"
        items:
          type: "string"
      name:
        type: "string"
      color:
        type: "string"
  BookCreate:
    type: "object"
    required:
    - "color"
    - "name"
    properties:
      name:
        type: "string"
      color:
        type: "string"       
  Contact:
    type: "object"
    required:
    - "firstName"
    - "groups"
    - "_id"
    - "isFavorite"
    - "lastName"
    - "phoneNumber"
    properties:
      _id:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      alias:
        type: "string"
      phoneNumber:
        type: "string"
      eMailAddress:
        type: "string"
      address:
        type: "string"
      birthday:
        type: "string"
      company:
        type: "string"
      homepage:
        type: "string"
      groups:
        type: "array"
        items: 
          type: "string"
      isFavorite:
        type: "boolean"
      imageUrl:
        type: "string"
        format: "base64"
      address1:
        type: "string"
      address2:
        type: "string"
  ContactCreate:
    type: "object"
    required:
    - "firstName"
    - "lastName"
    - "phoneNumber"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      alias:
        type: "string"
      phoneNumber:
        type: "string"
      eMailAddress:
        type: "string"
      address:
        type: "string"
      birthday:
        type: "string"
      company:
        type: "string"
      homepage:
        type: "string"
      imageUrl:
        type: "string"
        format: "base64"
      address1:
        type: "string"
      address2:
        type: "string"
  Group:
    type: "object"
    required:
    - "_id"
    - "name"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
  GroupCreate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"